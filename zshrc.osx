nowplaying() {
	osascript -e 'tell application "iTunes" to artist of current track as string'
	osascript -e 'tell application "iTunes" to name of current track as string'
}

execstop() {
	local name=$1
	dtrace -w \
		-n "proc:::exec-success /execname==\"$name\"/ { trace(pid); stopped = pid; stop() }" \
		-n END"/stopped != 0/ { pidresume(stopped) }"
}

pstack() {
	set -x
	local pid=$1
	local comm="$(which "$(ps -o comm= -p $pid)")"
	[ $? -eq 0 ] && {
		echo thread apply all backtrace | gdb $comm $pid
	}
}

preap_all() {
	ps -e -o pid,ppid,xstat,comm \
		| awk '$3 != 0 && $4 ~ /^\(/ {
			printf "(printf \"call (int)waitpid(%d, 0, 1)\\nquit\\n\"; cat /dev/zero) | gdb -q $(ps -o comm= -p %d) %d\n",
					$1, $2, $2; 
		       }' \
		| sh
}

nat() {
	sudo sysctl -w net.inet.ip.forwarding=1
	grep nat /etc/pf.conf
	sudo pfctl -f /etc/pf.conf -e
}

iphones() {
	system_profiler SPUSBDataType | awk -v p=0 '/(iPad|iPhone):/ { p=1; } p && $0 ~ /^$/ { p++; if (p > 2) exit(0); } p'
}

enable_sharing() {
	sudo defaults write /var/db/launchd.db/com.apple.launchd/overrides.plist com.apple.screensharing -dict Disabled -bool false
	sudo launchctl load /System/Library/LaunchDaemons/com.apple.screensharing.plist
}

_alias	tmux		tmux -2

_alias	mm		less +F /var/log/system.log
_alias	truss		sudo dtruss -f sudo -u $USER
_alias	pg		'ps -ef | g'
_alias	gentags		ctags -R
_alias	lsof		sudo lsof
_alias	lock		open -a /System/Library/Frameworks/ScreenSaver.framework//Versions/A/Resources/ScreenSaverEngine.app

_alias	perlenv		source $HOME/perl5/perlbrew/etc/bashrc

_alias	hls		env NOTRAP=1 ~/ss/streaming/utils/hls-dump.sh

#e() {
#	pgrep Emacs >/dev/null 2>&1 && emacsclient -nc $* || open -na /Applications/Emacs.app $*
#}
#
#e!() {
#	open -na /Applications/Emacs.app $*
#}

#alias emacs="/usr/local/bin/emacsclient -ct"
#alias e="/usr/local/bin/emacsclient -ct"
#alias es="/usr/local/bin/emacs --daemon"
